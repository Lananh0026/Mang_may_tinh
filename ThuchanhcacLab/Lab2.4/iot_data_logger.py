import paho.mqtt.client as mqtt
import csv
import time
import json
import matplotlib.pyplot as plt

# C·∫•u h√¨nh
CSV_FILE = "sensor_data.csv"
MQTT_BROKER = "broker.hivemq.com"
MQTT_PORT = 1883
MQTT_TOPIC = "iot/khdl/esp32"

# T·∫°o file CSV n·∫øu ch∆∞a c√≥
with open(CSV_FILE, mode='w', newline='') as file:
    writer = csv.writer(file)
    writer.writerow(["timestamp", "temperature", "humidity"])

# Danh s√°ch l∆∞u tr·ªØ d·ªØ li·ªáu
temps, hums, times = [], [], []

# H√†m khi k·∫øt n·ªëi th√†nh c√¥ng v·ªõi MQTT broker
def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("‚úÖ ƒê√£ k·∫øt n·ªëi MQTT broker.")
        client.subscribe(MQTT_TOPIC)
    else:
        print("‚ùå K·∫øt n·ªëi th·∫•t b·∫°i, m√£ l·ªói:", rc)

# H√†m khi nh·∫≠n ƒë∆∞·ª£c d·ªØ li·ªáu t·ª´ MQTT
def on_message(client, userdata, msg):
    try:
        data = json.loads(msg.payload.decode())
        timestamp = data.get("timestamp", time.time())
        temp = data.get("temperature", 0)
        hum = data.get("humidity", 0)

        print(f"üì• D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c: {timestamp}, {temp}, {hum}")

        # Ghi v√†o file CSV
        with open(CSV_FILE, mode='a', newline='') as file:
            writer = csv.writer(file)
            writer.writerow([timestamp, temp, hum])

        # L∆∞u v√†o danh s√°ch ƒë·ªÉ v·∫Ω bi·ªÉu ƒë·ªì
        temps.append(temp)
        hums.append(hum)
        times.append(timestamp)

        # V·∫Ω bi·ªÉu ƒë·ªì sau m·ªói 10 b·∫£n ghi
        if len(temps) % 10 == 0:
            plt.clf()
            plt.subplot(2, 1, 1)
            plt.plot(times, temps, 'r-', label='Nhi·ªát ƒë·ªô (¬∞C)')
            plt.ylabel("¬∞C")
            plt.legend()

            plt.subplot(2, 1, 2)
            plt.plot(times, hums, 'b-', label='ƒê·ªô ·∫©m (%)')
            plt.xlabel("Th·ªùi gian")
            plt.ylabel("%")
            plt.legend()

            plt.pause(0.1)

    except Exception as e:
        print("‚ö†Ô∏è L·ªói x·ª≠ l√Ω d·ªØ li·ªáu:", e)

# Kh·ªüi t·∫°o client MQTT v√† k·∫øt n·ªëi
client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message

client.connect(MQTT_BROKER, MQTT_PORT, 60)

# B·∫≠t ch·∫ø ƒë·ªô v·∫Ω t∆∞∆°ng t√°c
plt.ion()
client.loop_forever()
